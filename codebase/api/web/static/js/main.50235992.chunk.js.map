{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/cooks.ts","store/reducers/cart.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/spinner.tsx","components/home/header.tsx","components/home/footer.tsx","components/common/button.tsx","components/login/index.tsx","containers/login.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","components/home/items.tsx","store/actions/item.ts","containers/items.tsx","components/home/cart.tsx","containers/cart.tsx","components/home/change-password.tsx","containers/change-password.tsx","components/not-found/index.tsx","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","_objectSpread","isLoggedIn","role","name","userId","handleResult","cooks_objectSpread","data","isUpToDate","isError","errorMessage","handleAddToCart","cart_objectSpread","cookId","State","combineReducers","AppUser","arguments","length","undefined","action","type","SET_LOGIN_STATUS","RESET","Cooks","LOAD_COOKS","Cart","ADDTOCART","store","createStore","compose","applyMiddleware","reduxThunk","COLOR","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","_ex","_funName","console","log","Api","url","get","callback","_this","fetch","post","delete","patch","put","getAS","_callee","key","regenerator_default","a","wrap","_context","prev","next","sessionStorage","getItem","abrupt","sent","t0","stop","_callee2","method","token","_context2","headers","Accept","Content-Type","x-access-token","user-id","body","then","response","json","message","catch","error","toString","logout","dispatch","removeItem","setLoginResult","resetState","getCookResult","View","styled","div","_templateObject","TextInput","_templateObject2","img","_templateObject3","input","_templateObject4","Text","textarea","_templateObject5","select","_templateObject6","label","_templateObject7","Spinner","span","_templateObject8","this","props","visible","react","className","style","color","fontWeight","marginTop","text","React","defaultProps","Header","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","window","confirm","onLogout","result","alert","isShowHomeModel","bind","assertThisInitialized","cart","appUser","onClick","react_router_dom","to","marginRight","Footer","Button","value","title","onPress","button_objectSpread","styles","btn","backgroundColor","borderColor","cursor","Index","onLogin","userName","password","setState","isLoading","onForgetPassword","isForgetPass","mobileNumber","email","onCreateAccount","onForgetPassSubmit","toLowerCase","_this2","maxWidth","flexDirection","alignItems","justifyContent","marginBottom","flex","row","placeholder","login_objectSpread","txt","onChange","event","target","textAlign","button_Button","spinner_Spinner","txtIcon","marginLeft","height","width","resizeMode","top","paddingLeft","Login","connect","ownProps","controller","setItem","rememberMe","login","Page","Dashboard","onSearch","searchText","e","cooks","filter","d","i","indexOf","map","c","address","mobileNo","_id","Items","match","params","id","onLoad","_this3","item","description","price","push","addToCart","AddToCartResult","loadAll","amount","discount","removeFromCart","ChangePassword","onUpdate","newPassword","confirmNewPassword","changePassword","padding","getProfile","header_Header","react_router","path","exact","component","CDashboard","CItems","CCart","CChangePassword","NotFound","footer_Footer","Home","Array","AppContainer","App","react_default","createElement","es","containers_app_container_AppContainer","Component","Boolean","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50235992.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    LOAD_COOKS,\r\n    RESET,\r\n    ADDTOCART\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    name: '',\r\n    userId: ''\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: IAppUser): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload.isLoggedIn,\r\n        role: payload.role,\r\n        name: payload.name,\r\n        userId: payload.userId\r\n    };\r\n};","import { actionTypes } from '../action-types';\nimport { ICooks } from '../../models/store/cook';\n\nconst createEmptyResult = (): ICooks => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Cooks = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_COOKS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: ICooks, payload: ICooks): ICooks => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IItem } from '../../models/cook/item';\nimport { ICart } from '../../models/store/cart';\n\nconst createEmptyResult = (): ICart => ({\n    cookId: '',\n    data: []\n})\n\nexport const Cart = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.ADDTOCART:\n            return handleAddToCart(state, action.payload);\n    }\n    return state;\n};\n\nconst handleAddToCart = (state: ICart, payload: any): ICart  => {\n    return {\n        ...state, \n        cookId: payload.cookId,\n        data: payload.data\n    };\n};\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { Cooks } from './cooks';\r\nimport { Cart } from './cart';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    Cooks: Cooks,\r\n    Cart: Cart\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { State } from './reducers/state';\nimport { IAppState } from '../models/app-state';\n\nexport const store: Store<IAppState> = createStore(\n  State,\n  compose(\n    applyMiddleware(reduxThunk),\n  )\n);","const API_BASE_PATH = 'http://localhost:3001/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    COOK: 'COOK',\r\n    DELIVERYBOY: 'DELIVERYBOY'\r\n};","//import { config as apiConfig } from '../store/api/config';\n\nexport function parseJSON(response: any) {\n     return response.json()\n};\n\nexport function isNN(_input: any) { \n  return (isNNObject(_input) && _input.length > 0) \n};\n\nexport function isNNObject(_input: any) { \n  return (_input != null && _input != undefined) \n};\n\nexport function str2Json(_input: string) { \n  try {\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \n  } catch (ex) { \n    jsError(ex, \"String2JSON\"); \n    return {}; \n  } \n};\n\nexport function json2Str(_input: any) { \n  try {\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\n  } catch (ex) { \n    jsError(ex, \"JSON2String\"); \n    return \"\"; \n  }\n};\n\nexport function getBaseURL(_isApi: boolean) { \n  try {\n    let baseURL: string = \"\";\n    let arrURL = window.location.href.split(\"/\");\n    if(isNNObject(arrURL) && arrURL.length > 2){\n      if(_isApi){\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\n      }else{\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\n      }\n    }else{\n      baseURL = window.location.href;\n    }\n    return baseURL;\n  } catch (ex) { \n    jsError(ex, \"getBaseURL\"); \n    return \"\"; \n  }\n};\n\nexport function generateUUID() { // Public Domain/MIT\n  var d = new Date().getTime();\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n      d += performance.now(); //use high-precision timer if available\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n}\n\nexport function jsError(_ex: any, _funName: string) {\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \n   console.log(\"Error:\" + _funName + \":\" + _ex);\n};","import { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n};","import { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\nimport { ICook } from '../../models/cook';\r\nimport { ICooks } from '../../models/store/cook';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = sessionStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult({\r\n          isLoggedIn: true,\r\n          role: result.data.role,\r\n          name: result.data.name,\r\n          userId: result.data.userId}));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data))\r\n    {\r\n      dispatch(getCookResult(((isNNObject(result.data) && result.data instanceof Array) ? result.data as Array<ICook> : []), true, false, ''));    \r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data == true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(\r\n      {\r\n        isLoggedIn: false,\r\n        role: '',\r\n        name: '',\r\n        userId: ''\r\n      }\r\n    ));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nconst setLoginResult = (data: any) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\n\r\nconst getCookResult = (data: Array<ICook>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_COOKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ICooks\r\n});\r\n\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Text>...</Text>\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { View, Text, Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { ICart } from '../../models/store/cart';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  cart: ICart,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{ \r\n  isShowHomeModel: boolean\r\n};\r\n\r\nexport default class Header extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isShowHomeModel: false\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  logout = () => {\r\n    var con = window.confirm(\"Are you sure you wish to logout?\");\r\n    if(con){\r\n      this.props.onLogout((result: boolean) => {\r\n        if(result == true){\r\n          alert('Logout Success!');\r\n        }else{\r\n          alert('Failed to logout!');\r\n        }\r\n      });\r\n    }\r\n\r\n    /*\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.onLogout((result: boolean) => {\r\n              if(result == true){\r\n                alert('Logout Success!');\r\n              }else{\r\n                alert('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n    */\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.cart)\r\n    return (\r\n      <header className='header d100'>\r\n          <Text>Food Delivery App</Text>\r\n          \r\n          {\r\n            this.props.appUser.isLoggedIn ?\r\n            <span className='fr' onClick={this.logout}>\r\n              <Text className='pointer'>Logout</Text>\r\n            </span>\r\n            :\r\n            <Link to=\"/login\" className='fr' style={{color: '#FFFFFF'}}>Login</Link>\r\n          }\r\n          <Link to=\"/cart\" className='fr' style={{color: '#FFFFFF', marginRight: 25}}>{this.props.cart.data.length + ' Items in Cart'}</Link>\r\n      </header>\r\n    );\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class Footer extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer className=\"footer d100\">\r\n        <View className='center'>Footer</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer'\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result == true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            alert('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        alert('Contact administrator/manager to create/join your flat.');\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result == true){\r\n                    alert('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            alert('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Text>LOGIN</Text>\r\n                </View>\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...styles.txt}} value={this.state.userName} onChange={(event: any) => this.setState({userName: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...styles.txt}} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading == false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                </View>\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 3,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { login } from '../store/actions/account';\n\nimport Page from '../components/login/index';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback))\n});\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { View, Text, TextInput } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { ICooks } from '../../models/store/cook';\r\nimport { isNN } from '../../util';\r\nimport { ICook } from '../../models/cook';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  cooks: ICooks\r\n};\r\n\r\ninterface IState {\r\n  searchText: String\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: ''\r\n    }\r\n  };\r\n\r\n  onSearch = (text: String) => {\r\n    this.setState({\r\n      searchText: text\r\n    });\r\n  }\r\n  render() {\r\n    return(\r\n    <View className='d100'>\r\n      <View>\r\n        <TextInput type='text' className='d100' placeholder='Search Hotel' value={this.state.searchText + ''} onChange={(e: any) => this.onSearch(e.target.value)} />\r\n      </View>\r\n        {\r\n          (this.state.searchText.length > 0 ?  this.props.cooks.data.filter((d, i) => d.name.toLowerCase().indexOf(this.state.searchText.toLowerCase() + '') >= 0) : this.props.cooks.data).map((c: ICook, i) => {\r\n            return(\r\n              <View key={'c' + i} className='cook'>\r\n                <View className=''>\r\n                  <Text className=\"bold\">{c.name}</Text>\r\n                </View>\r\n                {c.address &&\r\n                <View className=''>\r\n                  <Text>{c.address}</Text>\r\n                </View>\r\n                }\r\n                {c.mobileNo &&\r\n                <View className=''>\r\n                  <Text>{c.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                <Link to={\"/items/\" + c._id}>View Food Items</Link>\r\n              </View>\r\n        \r\n            )\r\n          })\r\n        }\r\n    </View>\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    cooks: state.Cooks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { ICooks } from '../../models/store/cook';\r\nimport { isNN } from '../../util';\r\nimport { ICook } from '../../models/cook';\r\nimport { IItem } from '../../models/cook/item';\r\nimport { ICart } from '../../models/store/cart';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  cooks: ICooks,\r\n  cart: ICart,\r\n  onLoad: (cookId: string, callback: (result: Array<IItem>, message: string) => void) => void,\r\n  addToCart: (cookId: String, item: Array<IItem>) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  data: Array<IItem>\r\n};\r\n\r\nexport default class Items extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount() {\r\n    let cookId = this.props.match.params.id;\r\n    if(cookId.length > 0){\r\n    this.setState({\r\n        isLoading: true\r\n    });\r\n    this.props.onLoad(cookId, (result: Array<IItem>, message: string) => {\r\n      this.setState({\r\n          isLoading: false\r\n      });\r\n      if(result && result.length > 0){\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }else if(message.length > 0){\r\n        alert('Failed to load Profile: ' + message);\r\n      }\r\n    });\r\n  }\r\n}; \r\n\r\n  render() {\r\n    return(\r\n    <View className='d100'>\r\n        {\r\n          this.state.data.map((item: IItem, i) => {\r\n            return(\r\n              <View key={'i' + i} className='cook'>\r\n                <View className=''>\r\n                  <Text className=\"bold\">{item.name}</Text>\r\n                </View>\r\n                {item.description &&\r\n                <View className=''>\r\n                  <Text>{item.description}</Text>\r\n                </View>\r\n                }\r\n                {item.price &&\r\n                <View className=''>\r\n                  <Text>{'Rs. ' + item.price}</Text>\r\n                </View>\r\n                }\r\n                <Button title=\"Add To Cart\" onPress={() => {\r\n                  let cart = this.props.cart.data;\r\n                  cart.push(item);\r\n                  this.props.addToCart(this.props.match.params.id, cart);\r\n                }} />\r\n              </View>\r\n        \r\n            )\r\n          })\r\n        }\r\n    </View>\r\n    )\r\n  }\r\n};","import { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IItem } from '../../models/cook/item';\r\n\r\nlet controller: string = 'item';\r\n\r\nexport const loadAll = (cookId: string, callback: (result: Array<IItem>, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + cookId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      callback(result.data, '');\r\n    } else {\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const addToCart = (cookId: String, item: Array<IItem>) => (dispatch: any) => {\r\n  dispatch(AddToCartResult({cookId: cookId, data: item}));\r\n};\r\n  \r\nconst AddToCartResult = (data: any) => ({\r\n    type: actionTypes.ADDTOCART,\r\n    payload: data\r\n  });","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport Page from '../components/home/items';\r\nimport { IItem } from '../models/cook/item';\r\nimport { loadAll, addToCart } from '../store/actions/item';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    cooks: state.Cooks,\r\n    cart: state.Cart\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (cookId: string, callback: (result: Array<IItem>, message: string) => void) => dispatch(loadAll(cookId, callback)),\r\n    addToCart: (cookId: String, item: Array<IItem>) => dispatch(addToCart(cookId, item))\r\n});\r\n\r\nexport const Items = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { ICooks } from '../../models/store/cook';\r\nimport { isNN } from '../../util';\r\nimport { ICook } from '../../models/cook';\r\nimport { IItem } from '../../models/cook/item';\r\nimport { ICart } from '../../models/store/cart';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  cooks: ICooks,\r\n  cart: ICart,\r\n  removeFromCart: (cookId: String, item: Array<IItem>) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Cart extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let amount= 0, discount = 0;\r\n    this.props.cart.data.map((d: IItem, i) => {\r\n      amount += d.price;\r\n      discount += d.discount;\r\n    });\r\n    return(\r\n    <View className='d100'>\r\n      <View className=\"d100\">\r\n        <View>{\"Number of Items: \" + this.props.cart.data.length}</View>\r\n        <View>{\"Total Amount: \" +  amount}</View>\r\n        <View>{\"Discount: \" +  discount}</View>\r\n        <View>{\"Amount to Pay: \" +  (amount - discount)}</View>\r\n      </View>\r\n      <View className=\"bold d100\" style={{marginTop: 15}}>Items</View>\r\n        {\r\n          this.props.cart.data.length > 0 ?\r\n          this.props.cart.data.map((item: IItem, i) => {\r\n            return(\r\n              <View key={'i' + i} className='cook'>\r\n                <View className=''>\r\n                  <Text className=\"bold\">{item.name}</Text>\r\n                </View>\r\n                {item.description &&\r\n                <View className=''>\r\n                  <Text>{item.description}</Text>\r\n                </View>\r\n                }\r\n                {item.price &&\r\n                <View className=''>\r\n                  <Text>{'Rs. ' + item.price}</Text>\r\n                </View>\r\n                }\r\n                <Button title=\"Remove Item\" onPress={() => {\r\n                  let cart = this.props.cart.data;\r\n                  cart.push(item);\r\n                  this.props.removeFromCart(this.props.cart.cookId, this.props.cart.data.filter((d, i) => d._id != item._id));\r\n                }} />\r\n              </View>\r\n        \r\n            )\r\n          })\r\n          :\r\n          <View>\r\n          <Text>No items in cart</Text>\r\n          <Link to=\"/\"> Go to Shop</Link>\r\n          </View>\r\n        }\r\n    </View>\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport Page from '../components/home/cart';\r\nimport { IItem } from '../models/cook/item';\r\nimport { addToCart } from '../store/actions/item';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    cooks: state.Cooks,\r\n    cart: state.Cart\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    removeFromCart: (cookId: String, item: Array<IItem>) => dispatch(addToCart(cookId, item))\r\n});\r\n\r\nexport const Cart = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { isNN } from '../../util/index';\r\nimport { IAppUser } from '../../models/app-user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, scallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  password: string,\r\n  newPassword: string,\r\n  confirmNewPassword: string\r\n};\r\n\r\nexport default class ChangePassword extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.password) && isNN(this.state.newPassword) && isNN(this.state.confirmNewPassword)){\r\n      if(this.state.newPassword == this.state.confirmNewPassword){\r\n          this.setState({\r\n            isLoading: true\r\n          });\r\n          this.props.onUpdate(this.props.appUser.userId, this.state.password, this.state.newPassword, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result == true){\r\n              alert('Password updated successfully. Please login with your new password.');\r\n              this.props.onLogout((result: boolean) => {\r\n              });\r\n            }else{\r\n              alert(message);\r\n            }\r\n          });\r\n      }else{\r\n        alert('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      alert('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{flex: 1}}>\r\n        <View>\r\n          <View>\r\n            <TextInput type='password' placeholder='Password' className='form-control' value={this.state.password} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n          </View>\r\n          <View>\r\n            <TextInput type='password' placeholder='New Password' className='form-control' value={this.state.newPassword} onChange={(event: any) => this.setState({newPassword: event.target.value})} />\r\n          </View>\r\n          <View>\r\n            <TextInput type='password' placeholder='Confirm New Password' className='form-control' value={this.state.confirmNewPassword} onChange={(event: any) => this.setState({confirmNewPassword: event.target.value})} />\r\n          </View>\r\n          <View className='center'>\r\n            <Button\r\n            title=\"UPDATE\"\r\n            onPress={this.onUpdate}\r\n            />\r\n          </View>\r\n          <View style={{ marginTop: 7 }}>\r\n            <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { changePassword, logout } from '../store/actions/account';\n\nimport Page from '../components/home/change-password';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\n});\n\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 5,\r\n        marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center'\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    }\r\n};","import * as React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { Login } from '../../containers/login';\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Items as CItems} from '../../containers/items';\r\nimport { Cart as CCart} from '../../containers/cart';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport NotFound from '../../components/not-found';\r\nimport { ICooks } from '../../models/store/cook';\r\nimport { IItem } from '../../models/cook/item';\r\nimport { ICart } from '../../models/store/cart';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  cooks: ICooks,\r\n  cart: ICart,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!this.props.cooks || this.props.cooks.isUpToDate != true){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result != true){\r\n          alert('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n  }; \r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n        <View className=\"container\">\r\n          <Header appUser={this.props.appUser} cart={this.props.cart} onLogout={this.props.onLogout}/>\r\n            <View style={{padding: '0px 15px'}}>\r\n              <Link to=\"/\">Home</Link>\r\n            </View>\r\n            <View className=\"content\">\r\n              <Switch>\r\n                <Route path={'/'} exact component={CDashboard} />\r\n                <Route path={'/items/:id'} exact component={CItems} />\r\n                <Route path={'/cart'} exact component={CCart} />\r\n                <Route path={'/login'} exact component={Login} />\r\n                <Route path={'/change-password'} exact component={CChangePassword} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </View>\r\n          <Footer />\r\n          <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n        </View>\r\n    );\r\n  }\r\n}","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    cooks: state.Cooks,\r\n    cart: state.Cart\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Home } from '../containers/home';\nimport { IAppUser } from '../models/app-user/app-user';\n\ninterface IProps {\n  appUser: IAppUser\n};\n\ninterface IState{ \n};\n\nexport default class AppContainer extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n  };\n  \n  render() {\n    return(\n          <HashRouter>\n            <Home />\n          </HashRouter>\n    )\n  }\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport Page from '../components/app-container';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n   appUser: state.AppUser\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n});\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/app-store';\nimport { AppContainer } from './containers/app-container';\nimport './css/bootstrap.min.css';\nimport './css/common.scss';\n\nexport default class App extends React.Component {\n    render() {\n        return(\n          <Provider store={store}>\n            <AppContainer />\n          </Provider>      \n        )\n    }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}